# Generate predictions
prediction_data_S$Predicted_stdLI <- predict(li_model, newdata = prediction_data_S)
plot_NS_LI <- ggplot(data = op[op$Year <= 1997, ], aes(x = Year, y = stdLI)) +
geom_point(data = op_N, aes(x = Year, y = stdLI), alpha = 0.4, color = "blue") +
geom_point(data = op_S, aes(x = Year, y = stdLI), alpha = 0.4, color = "red") + # Original data points
geom_line(data = prediction_data_N, aes(x = Year, y = Predicted_stdLI), color = "blue", size = 1) +
geom_line(data = prediction_data_S, aes(x = Year, y = Predicted_stdLI), color = "red", size = 1) +
geom_line(data=prediction_data, aes( x= Year, y =Predicted_stdLI),color="black",size=1,linetype="dashed")+# Predicted lines
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
#Genetic Relationship
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdLI <- predict(li_model, newdata = prediction_data)
plot_K_LI <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdLI)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdLI), alpha = 0.4, color = "black") + # Original data points
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdLI),color="black",size=1,linetype="dashed")+
geom_line(data=prediction_data_N, aes( x= K3Q1S1964, y =Predicted_stdLI),color="blue",size=1)+
geom_line(data=prediction_data_S, aes( x= K3Q1S1964, y =Predicted_stdLI),color="red",size=1)+ # Predicted lines
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdAC <- predict(ac_model, newdata = prediction_data)
plot_K_AC <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdAC)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdAC), alpha = 0.4, color = "black") + # Original data points
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdAC),color="black",size=1,linetype="dashed")+
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
discrete <- ggplot(data=op[!is.na(op$N_S),],aes(x=TimeBin,y=K3Q1S1964,fill=N_S)) + geom_boxplot() + theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"),legend.position="none")+scale_fill_manual(values=c("blue","red"))
cont <- ggplot(data=op[!is.na(op$N_S),],aes(x=Year,y=K3Q2S1964,color=N_S)) + geom_point(alpha=0.4,color="black") + geom_smooth(method="lm",se=FALSE) + theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"),legend.position="none")+scale_color_manual(values=c("blue","red"))
panelA <- ggarrange(discrete,cont,ncol=1,nrow=2)
panelB <- ggarrange(plot_K_AC,plot_K_LI,plot_NS_AC,plot_NS_LI,ncol=2,nrow=2)
figure5 <- ggarrange(panelA,panelB,ncol=2,nrow=1,labels=c("A","B"))
figure5
panelA <- ggarrange(plot_NS_AC,plot_NS_LI,ncol=2,nrow=1)
panelB <- ggarrange(plot_K_AC,plot_K_LI,ncol=2,nrow=1)
final_plot <- ggarrange(panelA,panelB,ncol=1,nrow=2,labels=c("A","B"))
final_plot
plot_K_AC
plot_K_LI
plot_K_LI <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdLI)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdLI), alpha = 0.4, color = "black") + # Original data points
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdLI),color="black",size=1,linetype="dashed")+ # Predicted lines
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdAC <- predict(ac_model, newdata = prediction_data)
plot_K_AC <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdAC)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdAC), alpha = 0.4, color = "black") + # Original data points
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdAC),color="black",size=1,linetype="dashed")+
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
panelA <- ggarrange(plot_NS_AC,plot_NS_LI,ncol=2,nrow=1)
panelB <- ggarrange(plot_K_AC,plot_K_LI,ncol=2,nrow=1)
ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdLI)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdLI), alpha = 0.4, color = "black") +
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdLI),color="black",size=1,linetype="dashed")+  theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdLI <- predict(li_model, newdata = prediction_data)
plot_K_LI <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdLI)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdLI), alpha = 0.4, color = "black") +
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdLI),color="black",size=1,linetype="dashed")+  theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdAC <- predict(ac_model, newdata = prediction_data)
plot_K_AC <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdAC)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdAC), alpha = 0.4, color = "black") + # Original data points
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdAC),color="black",size=1,linetype="dashed")+
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_blank(), axis.text.x=element_text(size=10,color="black"))
panelA <- ggarrange(plot_NS_AC,plot_NS_LI,ncol=2,nrow=1)
panelB <- ggarrange(plot_K_AC,plot_K_LI,ncol=2,nrow=1)
final_plot <- ggarrange(panelA,panelB,ncol=1,nrow=2,labels=c("A","B"))
final_plot
lm(stdLI ~ Year * lat + K3Q1S1964, data = op)
summary(lm(stdLI ~ Year * lat + K3Q1S1964, data = op))
summary(lm(stdAC ~ Year * lat + K3Q1S1964, data = op))
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdLI <- predict(li_model, newdata = prediction_data)
plot_K_LI <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdLI)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdLI), alpha = 0.4, color = "black") +
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdLI),color="red",size=1,linetype="dashed")+  theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_text(size=12,color="black"), axis.text.x=element_text(size=10,color="black"))+xlab("Ancestry Proportion of Cluster 1")
# Create a new data frame for predictions
prediction_data<- data.frame(
K3Q1S1964 = seq(min(op$K3Q1S1964, na.rm = TRUE), max(op$K3Q1S1964, na.rm = TRUE), length.out = 100),
lat = mean(op$lat, na.rm = TRUE),  # Use the mean latitude or adjust as needed
Year = mean(op$Year, na.rm = TRUE)  # Use the mean Year or adjust as needed
)
prediction_data$Predicted_stdAC <- predict(ac_model, newdata = prediction_data)
plot_K_AC <- ggplot(data = op[op$Year <= 1997, ], aes(x = K3Q1S1964, y = stdAC)) +
geom_point(data = op, aes(x = K3Q1S1964, y = stdAC), alpha = 0.4, color = "black") + # Original data points
geom_line(data=prediction_data, aes( x= K3Q1S1964, y =Predicted_stdAC),color="red",size=1,linetype="dashed")+
theme_light() + theme(plot.title = element_text(hjust = 0.5),axis.title.x=element_text(size=12,color="black"), axis.text.x=element_text(size=10,color="black"))+xlab("Ancestry Proportion of Cluster 1")
panelA <- ggarrange(plot_NS_AC,plot_NS_LI,ncol=2,nrow=1)
panelB <- ggarrange(plot_K_AC,plot_K_LI,ncol=2,nrow=1)
final_plot <- ggarrange(panelA,panelB,ncol=1,nrow=2,labels=c("A","B"))
final_plot
#Install and Load Dependencies
install.packages("pacman")
library(pacman)
pacman::p_load(qqman,tidyverse,libr,data.table,tools)
#Site Finder
output_dir <- c("../GWAS/pdf_temp/gwas_all")
input_dir <- c("../GWAS/csv_temp/gwas_all_maf2")
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
# Filter files to include only those with more than one line
files <- files[sapply(files, function(file) length(readLines(file)) > 1)]
# Load the filtered files into the worklist
worklist <- lapply(files, fread)
track_list <- file_path_sans_ext(basename(files))
#Manhattan Format##
for(i in 1:length(worklist)) {
if(colnames(worklist[[i]])[[1]] == "Chromosome") {
colnames(worklist[[i]])[[1]] <- "CHR"
}
worklist[[i]][["GE"]] <- worklist[[i]][["CHR"]]
worklist[[i]][["GE"]] <- gsub("CP125836.1", 0, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125837.1", 67442382, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125838.1", 134314402, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125839.1", 189122421, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125840.1", 241003109, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125841.1", 300332024, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125842.1", 361819085, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125843.1", 426131630, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125844.1", 486027629, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125845.1", 544682953, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125846.1", 604037704, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125847.1", 664526502, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125848.1", 726727236, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125849.1", 785863116, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125850.1", 844369836, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125851.1", 909604829, worklist[[i]][["GE"]])
worklist[[i]][["CHR"]] <- gsub("CP125836.1", 1, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125837.1", 2, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125838.1", 3, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125839.1", 4, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125840.1", 5, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125841.1", 6, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125842.1", 7, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125843.1", 8, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125844.1", 9, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125845.1", 10, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125846.1", 11, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125847.1", 12, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125848.1", 13, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125849.1", 14, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125850.1", 15, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125851.1", 16, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- as.numeric(worklist[[i]][["CHR"]])
worklist[[i]][["GE"]] <- as.numeric(worklist[[i]][["GE"]])
worklist[[i]][["BP"]] <- worklist[[i]][["Position"]] + worklist[[i]][["GE"]]
}
rm(list=ls())
#Install and Load Dependencies
install.packages("pacman")
library(pacman)
pacman::p_load(qqman,tidyverse,libr,data.table,tools)
#Site Finder
output_dir <- c("../GWAS/pdf_temp/gwas_all")
input_dir <- c("../GWAS/csv_temp/gwas_all_maf2")
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
# Filter files to include only those with more than one line
files <- files[sapply(files, function(file) length(readLines(file)) > 1)]
# Load the filtered files into the worklist
worklist <- lapply(files, fread)
track_list <- file_path_sans_ext(basename(files))
#Manhattan Format##
for(i in 1:length(worklist)) {
if(colnames(worklist[[i]])[[1]] == "Chromosome") {
colnames(worklist[[i]])[[1]] <- "CHR"
}
worklist[[i]][["GE"]] <- worklist[[i]][["CHR"]]
worklist[[i]][["GE"]] <- gsub("CP125836.1", 0, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125837.1", 67442382, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125838.1", 134314402, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125839.1", 189122421, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125840.1", 241003109, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125841.1", 300332024, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125842.1", 361819085, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125843.1", 426131630, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125844.1", 486027629, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125845.1", 544682953, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125846.1", 604037704, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125847.1", 664526502, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125848.1", 726727236, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125849.1", 785863116, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125850.1", 844369836, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125851.1", 909604829, worklist[[i]][["GE"]])
worklist[[i]][["CHR"]] <- gsub("CP125836.1", 1, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125837.1", 2, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125838.1", 3, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125839.1", 4, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125840.1", 5, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125841.1", 6, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125842.1", 7, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125843.1", 8, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125844.1", 9, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125845.1", 10, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125846.1", 11, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125847.1", 12, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125848.1", 13, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125849.1", 14, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125850.1", 15, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125851.1", 16, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- as.numeric(worklist[[i]][["CHR"]])
worklist[[i]][["GE"]] <- as.numeric(worklist[[i]][["GE"]])
worklist[[i]][["BP"]] <- worklist[[i]][["Position"]] + worklist[[i]][["GE"]]
}
View(worklist)
#Install and Load Dependencies
install.packages("pacman")
library(pacman)
pacman::p_load(qqman,tidyverse,libr,data.table,tools)
#Site Finder
output_dir <- c("../GWAS/pdf_temp/all")
input_dir <- c("../GWAS/csv_temp/all")
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
# Filter files to include only those with more than one line
files <- files[sapply(files, function(file) length(readLines(file)) > 1)]
# Load the filtered files into the worklist
worklist <- lapply(files, fread)
track_list <- file_path_sans_ext(basename(files))
#Manhattan Format##
for(i in 1:length(worklist)) {
if(colnames(worklist[[i]])[[1]] == "Chromosome") {
colnames(worklist[[i]])[[1]] <- "CHR"
}
worklist[[i]][["GE"]] <- worklist[[i]][["CHR"]]
worklist[[i]][["GE"]] <- gsub("CP125836.1", 0, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125837.1", 67442382, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125838.1", 134314402, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125839.1", 189122421, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125840.1", 241003109, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125841.1", 300332024, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125842.1", 361819085, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125843.1", 426131630, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125844.1", 486027629, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125845.1", 544682953, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125846.1", 604037704, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125847.1", 664526502, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125848.1", 726727236, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125849.1", 785863116, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125850.1", 844369836, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125851.1", 909604829, worklist[[i]][["GE"]])
worklist[[i]][["CHR"]] <- gsub("CP125836.1", 1, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125837.1", 2, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125838.1", 3, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125839.1", 4, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125840.1", 5, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125841.1", 6, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125842.1", 7, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125843.1", 8, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125844.1", 9, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125845.1", 10, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125846.1", 11, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125847.1", 12, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125848.1", 13, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125849.1", 14, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125850.1", 15, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125851.1", 16, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- as.numeric(worklist[[i]][["CHR"]])
worklist[[i]][["GE"]] <- as.numeric(worklist[[i]][["GE"]])
worklist[[i]][["BP"]] <- worklist[[i]][["Position"]] + worklist[[i]][["GE"]]
}
worklist <- lapply(worklist, function(df) df[!is.na(df$CHR), ])
#Install and Load Dependencies
install.packages("pacman")
library(pacman)
pacman::p_load(qqman,tidyverse,libr,data.table,tools)
#Site Finder
output_dir <- c("../GWAS/pdf_temp/all")
input_dir <- c("../GWAS/csv_temp/all")
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
# Filter files to include only those with more than one line
files <- files[sapply(files, function(file) length(readLines(file)) > 1)]
# Load the filtered files into the worklist
worklist <- lapply(files, fread)
track_list <- file_path_sans_ext(basename(files))
#Manhattan Format##
for(i in 1:length(worklist)) {
if(colnames(worklist[[i]])[[1]] == "Chromosome") {
colnames(worklist[[i]])[[1]] <- "CHR"
}
worklist[[i]][["GE"]] <- worklist[[i]][["CHR"]]
worklist[[i]][["GE"]] <- gsub("CP125836.1", 0, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125837.1", 67442382, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125838.1", 134314402, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125839.1", 189122421, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125840.1", 241003109, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125841.1", 300332024, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125842.1", 361819085, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125843.1", 426131630, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125844.1", 486027629, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125845.1", 544682953, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125846.1", 604037704, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125847.1", 664526502, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125848.1", 726727236, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125849.1", 785863116, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125850.1", 844369836, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125851.1", 909604829, worklist[[i]][["GE"]])
worklist[[i]][["CHR"]] <- gsub("CP125836.1", 1, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125837.1", 2, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125838.1", 3, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125839.1", 4, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125840.1", 5, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125841.1", 6, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125842.1", 7, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125843.1", 8, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125844.1", 9, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125845.1", 10, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125846.1", 11, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125847.1", 12, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125848.1", 13, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125849.1", 14, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125850.1", 15, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125851.1", 16, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- as.numeric(worklist[[i]][["CHR"]])
worklist[[i]][["GE"]] <- as.numeric(worklist[[i]][["GE"]])
worklist[[i]][["BP"]] <- worklist[[i]][["Position"]] + worklist[[i]][["GE"]]
}
# Filter out rows with NA in the CHR column
worklist <- lapply(worklist, function(df) df[!is.na(df$CHR), ])
# Plot Manhattan plot
man_work<-worklist
for(i in 1:length(man_work)){
if(colnames(man_work[[i]])[[7]]=="LRTscore"){
colnames(man_work[[i]])[[7]]<-"LRT"
}
man_work[[i]][["LRT"]][man_work[[i]][["LRT"]]>=70]<-as.numeric(69.9)
if(!("P" %in% colnames(man_work[[i]]))){
man_work[[i]][["P"]]<-1-pchisq(man_work[[i]][["LRT"]],1,lower.tail=TRUE)
}
}
#Make Manhattan Plots with Bonferoni Correction of 1*10^9#
for(i in 1:length(man_work)){
pdf(paste(output_dir,"/",track_list[i],"_Manhattan_GenomeWide.pdf",sep=""),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]],chr="CHR",bp="BP",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
for(CH in unique(man_work[[i]][["CHR"]])){
pdf(paste(track_list[i],CH,"Manhattan_GenomeWide.pdf",sep="_"),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]][man_work[[i]][["CHR"]]==CH],chr="CHR",bp="Position",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
}
}
#Make Manhattan Plots with Bonferoni Correction of 1*10^9#
for(i in 1:length(man_work)){
pdf(paste(output_dir,"/",track_list[i],"_Manhattan_GenomeWide.pdf",sep=""),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]],chr="CHR",bp="BP",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
for(CH in unique(man_work[[i]][["CHR"]])){
pdf(paste(track_list[i],CH,"Manhattan_GenomeWide.pdf",sep="_"),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]][man_work[[i]][["CHR"]]==CH],chr="CHR",bp="Position",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
}
}
View(man_work)
View(man_work)
#Make Manhattan Plots with Bonferoni Correction of 1*10^9#
for(i in 1:length(man_work)){
pdf(paste(output_dir,"/",track_list[i],"_Manhattan_GenomeWide.pdf",sep=""),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]],chr="CHR",bp="BP",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
for(CH in unique(man_work[[i]][["CHR"]])){
pdf(paste(track_list[i],CH,"Manhattan_GenomeWide.pdf",sep="_"),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]][man_work[[i]][["CHR"]]==CHR],chr="CHR",bp="Position",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
}
}
for(i in 1:length(man_work)){
pdf(paste(output_dir,"/",track_list[i],"_Manhattan_GenomeWide.pdf",sep=""),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]],chr="CHR",bp="BP",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
}
#Install and Load Dependencies
install.packages("pacman")
library(pacman)
pacman::p_load(qqman,tidyverse,libr,data.table,tools)
#Site Finder
output_dir <- c("../GWAS/pdf_temp/all")
input_dir <- c("../GWAS/csv_temp/all")
files <- list.files(input_dir, pattern = "\\.csv$", full.names = TRUE)
# Filter files to include only those with more than one line
files <- files[sapply(files, function(file) length(readLines(file)) > 1)]
# Load the filtered files into the worklist
worklist <- lapply(files, fread)
track_list <- file_path_sans_ext(basename(files))
#Manhattan Format##
for(i in 1:length(worklist)) {
if(colnames(worklist[[i]])[[1]] == "Chromosome") {
colnames(worklist[[i]])[[1]] <- "CHR"
}
worklist[[i]][["GE"]] <- worklist[[i]][["CHR"]]
worklist[[i]][["GE"]] <- gsub("CP125836.1", 0, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125837.1", 67442382, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125838.1", 134314402, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125839.1", 189122421, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125840.1", 241003109, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125841.1", 300332024, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125842.1", 361819085, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125843.1", 426131630, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125844.1", 486027629, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125845.1", 544682953, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125846.1", 604037704, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125847.1", 664526502, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125848.1", 726727236, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125849.1", 785863116, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125850.1", 844369836, worklist[[i]][["GE"]])
worklist[[i]][["GE"]] <- gsub("CP125851.1", 909604829, worklist[[i]][["GE"]])
worklist[[i]][["CHR"]] <- gsub("CP125836.1", 1, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125837.1", 2, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125838.1", 3, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125839.1", 4, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125840.1", 5, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125841.1", 6, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125842.1", 7, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125843.1", 8, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125844.1", 9, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125845.1", 10, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125846.1", 11, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125847.1", 12, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125848.1", 13, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125849.1", 14, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125850.1", 15, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- gsub("CP125851.1", 16, worklist[[i]][["CHR"]])
worklist[[i]][["CHR"]] <- as.numeric(worklist[[i]][["CHR"]])
worklist[[i]][["GE"]] <- as.numeric(worklist[[i]][["GE"]])
worklist[[i]][["BP"]] <- worklist[[i]][["Position"]] + worklist[[i]][["GE"]]
}
# Filter out rows with NA in the CHR column
worklist <- lapply(worklist, function(df) df[!is.na(df$CHR), ])
# Plot Manhattan plot
man_work<-worklist
for(i in 1:length(man_work)){
if(colnames(man_work[[i]])[[7]]=="LRTscore"){
colnames(man_work[[i]])[[7]]<-"LRT"
}
man_work[[i]][["LRT"]][man_work[[i]][["LRT"]]>=70]<-as.numeric(69.9)
if(!("P" %in% colnames(man_work[[i]]))){
man_work[[i]][["P"]]<-1-pchisq(man_work[[i]][["LRT"]],1,lower.tail=TRUE)
}
}
#Make Manhattan Plots with Bonferoni Correction of 1*10^9#
for(i in 1:length(man_work)){
pdf(paste(output_dir,"/",track_list[i],"_Manhattan_GenomeWide.pdf",sep=""),
width=10,
height=8,
bg="white",
paper="A4")
manhattan(man_work[[i]],chr="CHR",bp="BP",p="P",snp="BP",genomewideline=-log(5*10^-11))
dev.off()
}
setwd("~/BIOL307_Lab1")
getwd()
library(shiny)
shiny::runApp(Lab1_ShinyApp.R)
shiny::runApp("Lab1_ShinyApp.R")
shiny::runApp("Lab1_ShinyApp.R")
shiny::runApp("Lab1_ShinyApp.R")
shiny::runApp("Lab1_ShinyApp.R")
shiny::runApp("Lab1_ShinyApp.R")
shiny::runApp("Lab1_ShinyApp.R")
shiny::runApp("Lab1_ShinyApp.R")
